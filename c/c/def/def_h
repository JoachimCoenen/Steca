// c

#ifndef C_C_DEF_H
#define C_C_DEF_H

#if defined(__GNUC__) && !defined(__APPLE__)
#pragma GCC diagnostic ignored "-Wswitch-enum"
#endif

#ifdef GENERATE_INTERFACE

#define NDEBUG

#else

#include <stddef.h> // size_t, wchar_t, ...
typedef size_t sz_t;

#include <assert.h>
#define EXPECT(cond) assert(cond);
#define ENSURE(cond) assert(cond);

#endif

//------------------------------------------------------------------------------
// cpp

#ifdef __cplusplus

#define _is_cpp_ (1)
#define EXTERN_C extern "C" {
#define EXTERN_C_END }

#else

#define _is_cpp_ (0)
#define EXTERN_C
#define EXTERN_C_END

#endif

//------------------------------------------------------------------------------
// explicit mutability

#if _is_cpp_

// make a type mutable
template <typename T> struct mut_typ            { typedef T typ; };
template <typename T> struct mut_typ<T const>   { typedef T typ; };

// make a var mutable
template <typename T> T*& mut(T const*const& t) { return const_cast<T*&>(t); }
template <typename T> T&  mut(T const& t)       { return const_cast<T&> (t); }

#endif

//------------------------------------------------------------------------------
#endif
// eof
